
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [User] ON

MERGE INTO [User] AS [Target]
USING (VALUES
 (1,N'test1',N'password1')
 ,(2,N'test2',N'password2')
 ,(3,N'admin',N'securePassword')
) AS [Source] ([Id],[Username],[Password])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[Username], [Target].[Username]) IS NOT NULL OR NULLIF([Target].[Username], [Source].[Username]) IS NOT NULL OR 
	NULLIF([Source].[Password], [Target].[Password]) IS NOT NULL OR NULLIF([Target].[Password], [Source].[Password]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Username] = [Source].[Username], 
  [Target].[Password] = [Source].[Password]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Username],[Password])
 VALUES([Source].[Id],[Source].[Username],[Source].[Password])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [User]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[User] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [User] OFF
SET NOCOUNT OFF
GO