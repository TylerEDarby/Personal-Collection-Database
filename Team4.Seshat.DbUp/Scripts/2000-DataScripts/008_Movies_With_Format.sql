
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [MovieFormat] ON

MERGE INTO [MovieFormat] AS [Target]
USING (VALUES
  (1,N'FLV')
 ,(2,N'UFO')
 ,(3,N'AVI')
 ,(4,N'MP4')
 ,(5,N'WMV')
 ,(6,N'WebM')
 ,(7,N'AVCHD')
 ,(8,N'MOV')
 ,(9,N'DVD')
 ,(10,N'BluRay')
) AS [Source] ([Id],[FormatName])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[FormatName], [Target].[FormatName]) IS NOT NULL OR NULLIF([Target].[FormatName], [Source].[FormatName]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[FormatName] = [Source].[FormatName]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[FormatName])
 VALUES([Source].[Id],[Source].[FormatName])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [MovieFormat]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[MovieFormat] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [MovieFormat] OFF
SET NOCOUNT OFF
GO




--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [MovieRecord] ON

MERGE INTO [MovieRecord] AS [Target]
USING (VALUES
  (1,N'Nightmare Before Christmas',N'AVI',1,1,3)
 ,(3,N'Trolls',N'FLV',3,1,1)
 ,(4,N'Trolls 2',N'MOV',9,1,8)
 ,(5,N'Frozen',N'MP',2,1,4)
 ,(6,N'Lilo & Stitch',N'WMV',626,1,5)
 ,(7,N'The Peanut Butter Falcon',N'MP4',14,1,4)
 ,(8,N'Tarzan',N'WebM',10,1,6)
 ,(9,N'The Wolf of Wall Street',N'AVCHD',24,1,6)
 ,(11,N'Contact',N'UFO',51,1,2)
 ,(12,N'Enter the Void',N'AVI',3,1,3)
 ,(13,N'Brave Little Toaster',N'FLV',5,1,1)
) AS [Source] ([Id],[Title],[Format],[Quantity],[LibraryId],[MovieFormatId])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[Title], [Target].[Title]) IS NOT NULL OR NULLIF([Target].[Title], [Source].[Title]) IS NOT NULL OR 
	NULLIF([Source].[Format], [Target].[Format]) IS NOT NULL OR NULLIF([Target].[Format], [Source].[Format]) IS NOT NULL OR 
	NULLIF([Source].[Quantity], [Target].[Quantity]) IS NOT NULL OR NULLIF([Target].[Quantity], [Source].[Quantity]) IS NOT NULL OR 
	NULLIF([Source].[LibraryId], [Target].[LibraryId]) IS NOT NULL OR NULLIF([Target].[LibraryId], [Source].[LibraryId]) IS NOT NULL OR 
	NULLIF([Source].[MovieFormatId], [Target].[MovieFormatId]) IS NOT NULL OR NULLIF([Target].[MovieFormatId], [Source].[MovieFormatId]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Title] = [Source].[Title], 
  [Target].[Format] = [Source].[Format], 
  [Target].[Quantity] = [Source].[Quantity], 
  [Target].[LibraryId] = [Source].[LibraryId], 
  [Target].[MovieFormatId] = [Source].[MovieFormatId]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Title],[Format],[Quantity],[LibraryId],[MovieFormatId])
 VALUES([Source].[Id],[Source].[Title],[Source].[Format],[Source].[Quantity],[Source].[LibraryId],[Source].[MovieFormatId])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [MovieRecord]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[MovieRecord] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO
