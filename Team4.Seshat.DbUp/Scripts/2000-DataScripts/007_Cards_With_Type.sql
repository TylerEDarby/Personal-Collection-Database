
--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [CardType] ON

MERGE INTO [CardType] AS [Target]
USING (VALUES
  (1,N'Magic the Gathering')
 ,(2,N'Digimon')
 ,(3,N'Pokemon')
 ,(4,N'Yu-Gi-Oh!')
 ,(5,N'NBA')
 ,(6,N'NFL')
 ,(7,N'MLB')
) AS [Source] ([Id],[TypeName])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[TypeName], [Target].[TypeName]) IS NOT NULL OR NULLIF([Target].[TypeName], [Source].[TypeName]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[TypeName] = [Source].[TypeName]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[TypeName])
 VALUES([Source].[Id],[Source].[TypeName])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [CardType]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[CardType] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [CardType] OFF
SET NOCOUNT OFF
GO




--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [CardRecord] ON

MERGE INTO [CardRecord] AS [Target]
USING (VALUES
  (1,N'Charizard',N'Pokemon',3,1,3)
 ,(2,N'Dark Magician',N'Yu-Gi-Oh!',1,1,4)
 ,(3,N'War Greymon',N'Digimon',2,1,2)
 ,(4,N'Black Lotus',N'Magic the Gathering',1,1,1)
 ,(5,N'Peyton Manning',N'MFL',5,1,5)
 ,(6,N'Lebron James',N'NBA',3,1,4)
 ,(7,N'Lugia',N'Pokemon',4,1,3)
 ,(8,N'Blue Eyes White Dragon',N'Yu-Gi-Oh!',3,1,4)
 ,(10,N'Omnimon',N'Digimon',6,1,2)
 ,(11,N'Agumon',N'Digimon',3,1,2)
) AS [Source] ([Id],[Name],[Category],[Quantity],[LibraryId],[CardTypeId])
ON ([Target].[Id] = [Source].[Id])
WHEN MATCHED AND (
	NULLIF([Source].[Name], [Target].[Name]) IS NOT NULL OR NULLIF([Target].[Name], [Source].[Name]) IS NOT NULL OR 
	NULLIF([Source].[Category], [Target].[Category]) IS NOT NULL OR NULLIF([Target].[Category], [Source].[Category]) IS NOT NULL OR 
	NULLIF([Source].[Quantity], [Target].[Quantity]) IS NOT NULL OR NULLIF([Target].[Quantity], [Source].[Quantity]) IS NOT NULL OR 
	NULLIF([Source].[LibraryId], [Target].[LibraryId]) IS NOT NULL OR NULLIF([Target].[LibraryId], [Source].[LibraryId]) IS NOT NULL OR 
	NULLIF([Source].[CardTypeId], [Target].[CardTypeId]) IS NOT NULL OR NULLIF([Target].[CardTypeId], [Source].[CardTypeId]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Name] = [Source].[Name], 
  [Target].[Category] = [Source].[Category], 
  [Target].[Quantity] = [Source].[Quantity], 
  [Target].[LibraryId] = [Source].[LibraryId], 
  [Target].[CardTypeId] = [Source].[CardTypeId]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Name],[Category],[Quantity],[LibraryId],[CardTypeId])
 VALUES([Source].[Id],[Source].[Name],[Source].[Category],[Source].[Quantity],[Source].[LibraryId],[Source].[CardTypeId])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [CardRecord]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[CardRecord] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [CardRecord] OFF
SET NOCOUNT OFF
GO
